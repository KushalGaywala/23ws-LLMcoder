[
    {
        "role": "system",
        "content": "\n# Instructions:\nYou are an autocomplete system for Python. Generate or complete Python code based on the user's description or the provided code snippet.\n\nThe user may\n1. Describe code, either directly or in a Python comment. In this case, you should implement the described code.\n2. Write incomplete code. In this case, you should complete the code from the last cursor position.\n3. If the last character is a newline or tab, come up with one or more possible next lines of code.\n\n\n## Example 1:\n\n[INPUT]\n# Function that adds two numbers\ndef\n[/INPUT]\n\n[ANSWER]\n```python\n add_numbers(a, b):\n    return a + b\n```\n[/ANSWER]\n\n\n## Example 2:\n\n[INPUT]\n```python\ndef factorial(n):\n    # Computes the fact\n```\n[/INPUT]\n\n[ANSWER]\n```python\n    # Computes the factorial of a number\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n```\n[/ANSWER]\n\n\n## Example 3:\n\n[INPUT]\nI need a function that checks if a number is prime\n[/INPUT]\n\n[ANSWER]\n```python\ndef is_prime(number):\n    if number > 1:\n        for i in range(2, int(number**0.5)+1):\n            if (number % i) == 0:\n                return False\n        return True\n    else:\n        return False\n```\n[/ANSWER]\n\n\n# Rules:\n- Your entire response must be valid Python code.\n- This is a \"python code block\": ```python ... ``` \n    - Inside it the three dots can be replaced with the code that you suggest\n- Avoid evasive or incomplete answers.\n- Any comments or notes must be made in Python code block, i.e., ```python ... ```.\n- You must not add any additional comments or notes outside of the ```python ... ``` blocks. Your entire response must only consist of one Python code block.\n- You must end your response after ending the Python code block with \"```\".\n"
    },
    {
        "role": "user",
        "content": "# Please try to Create API_KEYS file in the same Directory\nfrom API.API_KEYS import YOUTUBE_API_KEY\nfrom googleapiclient.discovery import build\n\n\nclass Youtube:\n    def __init__(self):\n        self.youtube = build('youtube', 'v3', developerKey=YOUTUBE_API_KEY)\n\n    def get_all_comments_from_video(self, video_ID, include_comments=False):\n        comments = []\n\n        # Fetch and Read the first batch of comments #\n        response = self.get_comments_from_video(video_ID)\n        video_comments = self.read_comments_from_response(response)\n\n        # Save first batch of comments #\n        comments = video_comments\n\n        # Get the response if more comments exists till next page token occur #\n\n"
    },
    {
        "role": "assistant",
        "content": "```python\n        while 'nextPageToken' in response:\n            next_page_token = response['nextPageToken']\n\n            # Fetch and Read the next batch of comments #\n            response = self.get_comments_from_video(video_ID, next_page_token)\n            video_comments = self.read_comments_from_response(response)\n\n            # Save next batch of comments #\n            comments += video_comments\n\n        return comments\n```\n```python\n    def get_comments_from_video(self, video_ID, page_token=None):\n        response = self.youtube.commentThreads().list(\n            part='snippet',\n            videoId=video_ID,\n            pageToken=page_token,\n            maxResults=100\n        ).execute()\n\n        return response\n```\n```python\n    def read_comments_from_response(self, response):\n        video_comments = []\n\n        for item in response['items']:\n            comment = item['snippet']['topLevelComment']['snippet']['textDisplay']\n            video_comments.append(comment)\n\n        return video_comments\n```\n```python\nyoutube = Youtube()\nvideo_ID = 'xxxxxxxxxx'  # Replace with the actual video ID\ncomments = youtube.get_all_comments_from_video(video_ID)\nfor comment in comments:\n    print(comment)\n```\n```"
    },
    {
        "role": "comment",
        "content": "\n+ The functions are correct and the logic is also corret\n= Still full code is provided \n"
    }
]